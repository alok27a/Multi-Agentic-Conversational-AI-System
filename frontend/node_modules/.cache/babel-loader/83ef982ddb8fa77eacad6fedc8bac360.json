{"ast":null,"code":"var _jsxFileName = \"/Users/alokmathur/Documents/Columbia/FTE/Tasks/Okada/Multi-Agentic-Conversational-AI-System/frontend/src/pages/Chat/ChatCounselling.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Stack, Text, Heading, Input, Flex, InputGroup, InputRightElement, CircularProgress } from \"@chakra-ui/react\";\nimport Sidebar from \"../../components/Chat/ChatSidebar\";\nimport Breadcrumbs from \"../../components/Utility/Breadcrumbs\";\nimport { TbSend } from \"react-icons/tb\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatCounselling = () => {\n  _s();\n\n  const [userText, setUserText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendMoodEntry = async () => {\n    if (!userText.trim()) return; // no empty input\n\n    setLoading(true);\n    setError(null); // Add user's message to chat\n\n    setMessages(prev => [...prev, {\n      role: \"user\",\n      content: userText\n    }]);\n\n    try {\n      const response = await fetch(\"https://mental-health-qwen-fsx1.vercel.app/api/mood\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: userText\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n\n      const data = await response.json(); // Defensive check for data.entry\n\n      if (!data.entry) {\n        throw new Error(\"Invalid response structure from backend\");\n      }\n\n      const mood = data.entry.emotion || \"Unknown\";\n      const reason = data.entry.reason || \"No reason provided\";\n      const playlist = data.entry.playlist || [];\n      const assistantContent = `\nMood detected: ${mood}\nReason: ${reason}\n\nMusic Recommendations:\n${playlist.length > 0 ? playlist.map((song, idx) => `${idx + 1}. ${song.title} by ${song.artist}`).join(\"\\n\") : \"No recommendations available.\"}\n    `.trim();\n      setMessages(prev => [...prev, {\n        role: \"assistant\",\n        content: assistantContent\n      }]);\n    } catch (err) {\n      setError(err.message);\n      setMessages(prev => [...prev, {\n        role: \"assistant\",\n        content: \"Sorry, something went wrong. Please try again.\"\n      }]);\n    } finally {\n      setLoading(false);\n      setUserText(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sidebar, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      links: [\"Home\", \"Dashboard\", \"Counselling\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      mt: 8,\n      ml: 4,\n      children: \"Music Recommendations Based on your Mental Health\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      p: 4,\n      gap: 3,\n      h: \"80vh\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        flex: 1,\n        direction: \"column\",\n        pt: 4,\n        bg: \"white\",\n        w: \"full\",\n        p: 8,\n        borderRadius: \"md\",\n        h: \"full\",\n        overflowY: \"scroll\",\n        style: {\n          scrollbarWidth: \"none\",\n          \"&::-webkit-scrollbar\": {\n            width: 0\n          }\n        },\n        children: [messages.map((msg, index) => {\n          if (msg.role === \"assistant\") {\n            return /*#__PURE__*/_jsxDEV(Flex, {\n              bg: \"red.100\",\n              w: \"fit-content\",\n              minWidth: \"100px\",\n              borderRadius: 5,\n              p: 3,\n              m: 1,\n              whiteSpace: \"pre-line\" // preserve line breaks\n              ,\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                children: msg.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this);\n          } else if (msg.role === \"user\") {\n            return /*#__PURE__*/_jsxDEV(Flex, {\n              bg: \"blue.100\",\n              w: \"fit-content\",\n              minWidth: \"100px\",\n              p: 3,\n              m: 1,\n              borderRadius: 5,\n              alignSelf: \"flex-end\",\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                children: msg.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this);\n          }\n\n          return null;\n        }), error && /*#__PURE__*/_jsxDEV(Text, {\n          color: \"red.500\",\n          mt: 2,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: userText,\n          disabled: loading,\n          onChange: e => setUserText(e.target.value),\n          pr: \"4.5rem\",\n          mb: \"0.8rem\",\n          placeholder: loading ? \"Processing your mood...\" : \"Describe how you feel...\",\n          onKeyDown: e => {\n            if (e.key === \"Enter\" && !e.shiftKey) {\n              e.preventDefault();\n              sendMoodEntry();\n            }\n          },\n          resize: \"vertical\",\n          as: \"textarea\",\n          rows: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n          cursor: loading ? \"not-allowed\" : \"pointer\",\n          onClick: sendMoodEntry,\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            isIndeterminate: true,\n            size: \"20px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(TbSend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatCounselling, \"BUuI5Ysed7CL1fibXAO+0GKJ04g=\");\n\n_c = ChatCounselling;\nexport default ChatCounselling;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatCounselling\");","map":{"version":3,"names":["React","useState","Stack","Text","Heading","Input","Flex","InputGroup","InputRightElement","CircularProgress","Sidebar","Breadcrumbs","TbSend","ChatCounselling","userText","setUserText","messages","setMessages","loading","setLoading","error","setError","sendMoodEntry","trim","prev","role","content","response","fetch","method","headers","body","JSON","stringify","text","ok","Error","statusText","data","json","entry","mood","emotion","reason","playlist","assistantContent","length","map","song","idx","title","artist","join","err","message","scrollbarWidth","width","msg","index","e","target","value","key","shiftKey","preventDefault"],"sources":["/Users/alokmathur/Documents/Columbia/FTE/Tasks/Okada/Multi-Agentic-Conversational-AI-System/frontend/src/pages/Chat/ChatCounselling.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n    Stack,\n    Text,\n    Heading,\n    Input,\n    Flex,\n    InputGroup,\n    InputRightElement,\n    CircularProgress,\n} from \"@chakra-ui/react\";\nimport Sidebar from \"../../components/Chat/ChatSidebar\";\nimport Breadcrumbs from \"../../components/Utility/Breadcrumbs\";\nimport { TbSend } from \"react-icons/tb\";\n\nconst ChatCounselling = () => {\n    const [userText, setUserText] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n   const sendMoodEntry = async () => {\n  if (!userText.trim()) return; // no empty input\n  setLoading(true);\n  setError(null);\n\n  // Add user's message to chat\n  setMessages((prev) => [...prev, { role: \"user\", content: userText }]);\n\n  try {\n    const response = await fetch(\"https://mental-health-qwen-fsx1.vercel.app/api/mood\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ text: userText }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Error: ${response.statusText}`);\n    }\n\n    const data = await response.json();\n\n    // Defensive check for data.entry\n    if (!data.entry) {\n      throw new Error(\"Invalid response structure from backend\");\n    }\n\n    const mood = data.entry.emotion || \"Unknown\";\n    const reason = data.entry.reason || \"No reason provided\";\n    const playlist = data.entry.playlist || [];\n\n    const assistantContent = `\nMood detected: ${mood}\nReason: ${reason}\n\nMusic Recommendations:\n${playlist.length > 0\n  ? playlist.map((song, idx) => `${idx + 1}. ${song.title} by ${song.artist}`).join(\"\\n\")\n  : \"No recommendations available.\"\n}\n    `.trim();\n\n    setMessages((prev) => [\n      ...prev,\n      { role: \"assistant\", content: assistantContent },\n    ]);\n  } catch (err) {\n    setError(err.message);\n    setMessages((prev) => [\n      ...prev,\n      {\n        role: \"assistant\",\n        content: \"Sorry, something went wrong. Please try again.\",\n      },\n    ]);\n  } finally {\n    setLoading(false);\n    setUserText(\"\");\n  }\n};\n\n    return (\n        <Sidebar>\n            <Breadcrumbs links={[\"Home\", \"Dashboard\", \"Counselling\"]} />\n            <Heading mt={8} ml={4}>\n                Music Recommendations Based on your Mental Health\n            </Heading>\n            <Stack p={4} gap={3} h=\"80vh\">\n                <Flex\n                    flex={1}\n                    direction=\"column\"\n                    pt={4}\n                    bg=\"white\"\n                    w=\"full\"\n                    p={8}\n                    borderRadius=\"md\"\n                    h=\"full\"\n                    overflowY=\"scroll\"\n                    style={{\n                        scrollbarWidth: \"none\",\n                        \"&::-webkit-scrollbar\": { width: 0 },\n                    }}\n                >\n                    {messages.map((msg, index) => {\n                        if (msg.role === \"assistant\") {\n                            return (\n                                <Flex\n                                    key={index}\n                                    bg=\"red.100\"\n                                    w=\"fit-content\"\n                                    minWidth=\"100px\"\n                                    borderRadius={5}\n                                    p={3}\n                                    m={1}\n                                    whiteSpace=\"pre-line\" // preserve line breaks\n                                >\n                                    <Text>{msg.content}</Text>\n                                </Flex>\n                            );\n                        } else if (msg.role === \"user\") {\n                            return (\n                                <Flex\n                                    key={index}\n                                    bg=\"blue.100\"\n                                    w=\"fit-content\"\n                                    minWidth=\"100px\"\n                                    p={3}\n                                    m={1}\n                                    borderRadius={5}\n                                    alignSelf=\"flex-end\"\n                                >\n                                    <Text>{msg.content}</Text>\n                                </Flex>\n                            );\n                        }\n                        return null;\n                    })}\n                    {error && (\n                        <Text color=\"red.500\" mt={2}>\n                            {error}\n                        </Text>\n                    )}\n                </Flex>\n                <InputGroup>\n                    <Input\n                        value={userText}\n                        disabled={loading}\n                        onChange={(e) => setUserText(e.target.value)}\n                        pr=\"4.5rem\"\n                        mb=\"0.8rem\"\n                        placeholder={\n                            loading\n                                ? \"Processing your mood...\"\n                                : \"Describe how you feel...\"\n                        }\n                        onKeyDown={(e) => {\n                            if (e.key === \"Enter\" && !e.shiftKey) {\n                                e.preventDefault();\n                                sendMoodEntry();\n                            }\n                        }}\n                        resize=\"vertical\"\n                        as=\"textarea\"\n                        rows={2}\n                    />\n                    <InputRightElement\n                        cursor={loading ? \"not-allowed\" : \"pointer\"}\n                        onClick={sendMoodEntry}\n                        children={\n                            loading ? (\n                                <CircularProgress isIndeterminate size=\"20px\" />\n                            ) : (\n                                <TbSend />\n                            )\n                        }\n                    />\n                </InputGroup>\n            </Stack>\n        </Sidebar>\n    );\n};\n\nexport default ChatCounselling;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}